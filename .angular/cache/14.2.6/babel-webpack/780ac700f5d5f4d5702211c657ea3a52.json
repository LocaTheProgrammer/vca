{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let CustomInputComponent = /*#__PURE__*/(() => {\n  class CustomInputComponent {\n    constructor() {\n      this.valueInput = '';\n      this.label = '';\n\n      this.onChange = () => {};\n\n      this.onTouch = () => {};\n\n      this.inputValue = '';\n    }\n\n    ngOnInit() {\n      if (this.valueInput != '') {\n        this.inputValue = this.valueInput;\n      }\n    }\n\n    set value(val) {\n      this.inputValue = val;\n      this.onChange(val);\n      this.onTouch(val);\n    }\n\n    writeValue(value) {\n      this.value = value;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouch = fn;\n    }\n\n  }\n\n  CustomInputComponent.ɵfac = function CustomInputComponent_Factory(t) {\n    return new (t || CustomInputComponent)();\n  };\n\n  CustomInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomInputComponent,\n    selectors: [[\"app-custom-input\"]],\n    inputs: {\n      placeholder: \"placeholder\",\n      type: \"type\",\n      valueInput: \"valueInput\",\n      label: \"label\",\n      disabledCondition: \"disabledCondition\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CustomInputComponent),\n      multi: true\n    }])],\n    decls: 2,\n    vars: 6,\n    consts: [[1, \"input-width\", 3, \"ngModel\", \"placeholder\", \"type\", \"value\", \"disabled\", \"ngModelChange\"]],\n    template: function CustomInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n        i0.ɵɵelementStart(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CustomInputComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.value = $event;\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.value)(\"placeholder\", ctx.placeholder)(\"type\", ctx.type)(\"value\", ctx.valueInput)(\"disabled\", ctx.disabledCondition);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\".input-width[_ngcontent-%COMP%]{min-width:50px}\"]\n  });\n  return CustomInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}